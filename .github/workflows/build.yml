name: Build and Push to AWS ECR

on:
  # When a new tag is pushed
  push:
    tags:
      - 'v*'
  # When the Semantic Release workflow is completed
  workflow_run:
    workflows: ['Semantic Release']
    types:
      - completed
    branches:
      - master
      - develop

jobs:
  build:
    # If the workflow is triggered by a tag, it will run
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: ${{ startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, '-dev.') && 'production' || 'development' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get repository name
        id: repo-name
        run: |
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d '/' -f 2)
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "Repository name: $REPO_NAME"

      - name: Extract GitHub Tag
        id: tag
        run: |
          if [[ $GITHUB_EVENT_NAME == "workflow_run" ]]; then
            git fetch --tags
            TAG=$(git describe --tags --abbrev=0)
            echo "GITHUB_TAG=$TAG" >> $GITHUB_ENV
          else
            echo "GITHUB_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi
          echo "GitHub tag: ${{ env.GITHUB_TAG }}"

      - name: Create custom image tag with repo name
        run: |
          echo "IMAGE_TAG=${{ env.REPO_NAME }}.${{ env.GITHUB_TAG }}" >> $GITHUB_ENV
          echo "Will use image tag: ${{ env.IMAGE_TAG }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          echo "Building image: ${{ env.IMAGE_TAG }}"
          docker build -t ${{ secrets.ECR_URI }}:${{ env.IMAGE_TAG }} .
          docker push ${{ secrets.ECR_URI }}:${{ env.IMAGE_TAG }}

      - name: Push latest tag if prod
        if: ${{ !contains(env.GITHUB_TAG, '-dev.') && !contains(env.GITHUB_TAG, '-alpha.') && !contains(env.GITHUB_TAG, '-beta.') }}
        run: |
          echo "Pushing latest tag: ${{ env.REPO_NAME }}.latest"
          docker tag ${{ secrets.ECR_URI }}:${{ env.IMAGE_TAG }} \
                     ${{ secrets.ECR_URI }}:${{ env.REPO_NAME }}.latest
          docker push ${{ secrets.ECR_URI }}:${{ env.REPO_NAME }}.latest